{"version":3,"names":["Batchinator","require","FillRateHelper","ReactNative","RefreshControl","ScrollView","StyleSheet","View","ViewabilityHelper","flattenStyle","infoLog","invariant","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onEndReachedThresholdOrDefault","onEndReachedThreshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","VirtualizedList","props","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_getNestedChildState","key","existingChildData","_nestedChildLists","get","state","_registerAsNestedChild","childList","childListsInCell","_cellKeysToChildListKeys","cellKey","Set","add","set","ref","console","error","describeNestedLists","_hasInteracted","recordInteraction","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","forEach","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","Map","_frames","_footerLength","_hasDoneInitialScroll","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","visibleLength","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_triggerRemeasureForChildListsInCell","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","scrollToIndex","animated","index","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","Math","max","perf","prevDt","_updateViewableItems","data","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","getItemCount","_onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","computeWindowedRenderLimits","_getFrameMetricsApprox","distanceFromEnd","renderAhead","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","_createViewToken","isViewable","getItem","item","_keyExtractor","frame","_getFrameMetrics","getItemLayout","length","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","storedState","getNestedChildState","_getListKey","frames","params","veryLast","scrollTo","warn","x","y","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","itemCount","t","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","listKey","_getCellKey","parent","debugInfo","registerAsNestedChild","parentDebugInfo","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","has","undefined","_onCellLayout","disableVirtualization","nestedContext","keyExtractor","defaultKeyExtractor","String","type","displayName","__DEV__","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","element","React","isValidElement","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","lastFrame","endFrame","tailSpacerLength","cloneElement","event","style","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","getScrollMetrics","_getDebugInfo","renderScrollComponent","ret","scrollContext","nesting","debug","_renderDebugOverlay","prevProps","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","measureLayout","scrollMetrics","metricsChanged","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","onEndReached","threshold","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","prevState","PureComponent","contextType","VirtualizedListContext","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","renderItem","ListItemComponent","createElement","separators","fillRateHelper","parentProps","_renderElement","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","result","Component","trace","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nconst Batchinator = require('../Interaction/Batchinator');\nconst FillRateHelper = require('./FillRateHelper');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst RefreshControl = require('../Components/RefreshControl/RefreshControl');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst View = require('../Components/View/View');\nconst ViewabilityHelper = require('./ViewabilityHelper');\n\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\n\nimport {\n  keyExtractor as defaultKeyExtractor,\n  computeWindowedRenderLimits,\n} from './VirtualizeUtils';\n\nimport * as React from 'react';\nimport type {ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from './ViewabilityHelper';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n  type ChildListState,\n  type ListDebugInfo,\n} from './VirtualizedListContext.js';\n\ntype Item = any;\n\nexport type Separators = {\n  highlight: () => void,\n  unhighlight: () => void,\n  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n  ...\n};\n\nexport type RenderItemProps<ItemT> = {\n  item: ItemT,\n  index: number,\n  separators: Separators,\n  ...\n};\n\nexport type RenderItemType<ItemT> = (\n  info: RenderItemProps<ItemT>,\n) => React.Node;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype RequiredProps = {|\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n|};\ntype OptionalProps = {|\n  renderItem?: ?RenderItemType<Item>,\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes. Defaults to false.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  // e.g. height, y\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender?: ?number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor?: ?(item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered in between each item, but not at the top or bottom. By default, `highlighted` and\n   * `leadingItem` props are provided. `renderItem` provides `separators.highlight`/`unhighlight`\n   * which will update the `highlighted` prop, but you can also add custom props with\n   * `separators.updateProps`.\n   */\n  ItemSeparatorComponent?: ?React.ComponentType<any>,\n  /**\n   * Takes an item from `data` and renders it into the list. Example usage:\n   *\n   *     <FlatList\n   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (\n   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />\n   *       )}\n   *       data={[{title: 'Title Text', key: 'item1'}]}\n   *       ListItemComponent={({item, separators}) => (\n   *         <TouchableHighlight\n   *           onPress={() => this._onPress(item)}\n   *           onShowUnderlay={separators.highlight}\n   *           onHideUnderlay={separators.unhighlight}>\n   *           <View style={{backgroundColor: 'white'}}>\n   *             <Text>{item.title}</Text>\n   *           </View>\n   *         </TouchableHighlight>\n   *       )}\n   *     />\n   *\n   * Provides additional metadata like `index` if you need it, as well as a more generic\n   * `separators.updateProps` function which let's you set whatever props you want to change the\n   * rendering of either the leading separator or trailing separator in case the more common\n   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for\n   * your use-case.\n   */\n  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness may suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch?: ?number,\n  /**\n   * Called once when the scroll position gets within `onEndReachedThreshold` of the rendered\n   * content.\n   */\n  onEndReached?: ?(info: {distanceFromEnd: number, ...}) => void,\n  /**\n   * How far from the end (in units of visible length of the list) the bottom edge of the\n   * list must be from the end of the content to trigger the `onEndReached` callback.\n   * Thus a value of 0.5 will trigger `onEndReached` when the end of the content is\n   * within half the visible length of the list.\n   */\n  onEndReachedThreshold?: ?number,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?() => void,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n    ...\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod?: ?number,\n  /**\n   * See `ViewabilityHelper` for flow type and further documentation.\n   */\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize?: ?number,\n  /**\n   * The legacy implementation is no longer supported.\n   */\n  legacyImplementation?: empty,\n|};\n\ntype Props = {|\n  ...React.ElementConfig<typeof ScrollView>,\n  ...RequiredProps,\n  ...OptionalProps,\n|};\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype State = {\n  first: number,\n  last: number,\n};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal: ?boolean) {\n  return horizontal ?? false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\nfunction initialNumToRenderOrDefault(initialNumToRender: ?number) {\n  return initialNumToRender ?? 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch: ?number) {\n  return maxToRenderPerBatch ?? 10;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold: ?number) {\n  return onEndReachedThreshold ?? 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle: ?number) {\n  return scrollEventThrottle ?? 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize: ?number) {\n  return windowSize ?? 21;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist.html)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${getItemCount(\n        data,\n      ) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  _getListKey(): string {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo(): ListDebugInfo {\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: this.context?.debugInfo,\n    };\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n    parentDebugInfo: ListDebugInfo,\n    ...\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.\\n\\n' +\n          describeNestedLists({\n            ...childList,\n            // We're called from the child's componentDidMount, so it's safe to\n            // read the child's props here (albeit weird).\n            horizontal: !!childList.ref.props.horizontal,\n          }),\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n    ...\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(props.windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        // $FlowFixMe[incompatible-call]\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) +\n            initialNumToRenderOrDefault(this.props.initialNumToRender),\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.getNestedChildState(this._getListKey());\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    const {data, getItemCount} = newProps;\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      newProps.maxToRenderPerBatch,\n    );\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = this._keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  _keyExtractor(item: Item, index: number) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n      }\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, element.props.style),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(\n        this.props.scrollEventThrottle,\n      ), // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n    };\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n          debugInfo: this._getDebugInfo(),\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDoneInitialScroll = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {\n      ref: ?VirtualizedList,\n      state: ?ChildListState,\n      ...\n    },\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._cellKeysToChildListKeys.forEach(childListKeys => {\n              if (childListKeys) {\n                for (let childKey of childListKeys) {\n                  const childList = this._nestedChildLists.get(childKey);\n                  childList &&\n                    childList.ref &&\n                    childList.ref.measureLayoutRelativeToContainingList();\n                }\n              }\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = e => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    const threshold =\n      onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      distanceFromEnd < threshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      if (this.props.contentOffset == null) {\n        this.scrollToIndex({\n          animated: false,\n          index: this.props.initialScrollIndex,\n        });\n      }\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    const scrollingThreshold = (onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {\n      data,\n      getItemCount,\n      onEndReachedThreshold: _onEndReachedThreshold,\n    } = this.props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      _onEndReachedThreshold,\n    );\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      const {contentLength, offset, visibleLength} = this._scrollMetrics;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (visibleLength > 0 && contentLength > 0) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props.data,\n              this.props.getItemCount,\n              maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch),\n              windowSizeOrDefault(this.props.windowSize),\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            // $FlowFixMe[incompatible-use]\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      if (\n        newState != null &&\n        newState.first === state.first &&\n        newState.last === state.last\n      ) {\n        newState = null;\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: this._keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {\n    length: number,\n    offset: number,\n    ...\n  } => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {data, getItem, getItemCount, getItemLayout} = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[this._keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n      }\n    }\n    /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n     * suppresses an error found when Flow v0.63 was deployed. To see the error\n     * delete this comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\ntype CellRendererProps = {\n  CellRendererComponent?: ?React.ComponentType<any>,\n  ItemSeparatorComponent: ?React.ComponentType<\n    any | {highlighted: boolean, leadingItem: ?Item},\n  >,\n  cellKey: string,\n  fillRateHelper: FillRateHelper,\n  horizontal: ?boolean,\n  index: number,\n  inversionStyle: ViewStyleProp,\n  item: Item,\n  // This is extracted by ScrollViewStickyHeader\n  onLayout: (event: Object) => void,\n  onUnmount: (cellKey: string) => void,\n  onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n  parentProps: {\n    // e.g. height, y,\n    getItemLayout?: (\n      data: any,\n      index: number,\n    ) => {\n      length: number,\n      offset: number,\n      index: number,\n      ...\n    },\n    renderItem?: ?RenderItemType<Item>,\n    ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n    ...\n  },\n  prevCellKey: ?string,\n  ...\n};\n\ntype CellRendererState = {\n  separatorProps: $ReadOnly<{|\n    highlighted: boolean,\n    leadingItem: ?Item,\n  |}>,\n  ...\n};\n\nclass CellRenderer extends React.Component<\n  CellRendererProps,\n  CellRendererState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static getDerivedStateFromProps(\n    props: CellRendererProps,\n    prevState: CellRendererState,\n  ): ?CellRendererState {\n    return {\n      separatorProps: {\n        ...prevState.separatorProps,\n        leadingItem: props.item,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _renderElement(renderItem, ListItemComponent, item, index) {\n    if (renderItem && ListItemComponent) {\n      console.warn(\n        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +\n          ' precedence over renderItem.',\n      );\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    invariant(\n      false,\n      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',\n    );\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout, ListItemComponent} = parentProps;\n    const element = this._renderElement(\n      renderItem,\n      ListItemComponent,\n      item,\n      index,\n    );\n\n    const onLayout =\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    const result = !CellRendererComponent ? (\n      /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n        This comment suppresses an error found when Flow v0.89 was deployed. *\n        To see the error, delete this comment and run Flow. */\n      <View style={cellStyle} onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </View>\n    ) : (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n\n    return (\n      <VirtualizedListCellContextProvider cellKey={this.props.cellKey}>\n        {result}\n      </VirtualizedListCellContextProvider>\n    );\n  }\n}\n\nfunction describeNestedLists(childList: {\n  +cellKey: string,\n  +key: string,\n  +ref: VirtualizedList,\n  +parentDebugInfo: ListDebugInfo,\n  +horizontal: boolean,\n  ...\n}) {\n  let trace =\n    'VirtualizedList trace:\\n' +\n    `  Child (${childList.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n    `    listKey: ${childList.key}\\n` +\n    `    cellKey: ${childList.cellKey}`;\n\n  let debugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace +=\n      `\\n  Parent (${debugInfo.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n      `    listKey: ${debugInfo.listKey}\\n` +\n      `    cellKey: ${debugInfo.cellKey}`;\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse',\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":"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"}