6c881067c366f5347a343b56db32f7d9
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var NativeComponentRegistry = _interopRequireWildcard(require("../../NativeComponent/NativeComponentRegistry"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var ScrollViewNativeComponent = NativeComponentRegistry.get('RCTScrollView', function () {
  return {
    uiViewClassName: 'RCTScrollView',
    bubblingEventTypes: {},
    directEventTypes: {
      topScrollToTop: {
        registrationName: 'onScrollToTop'
      }
    },
    validAttributes: {
      alwaysBounceHorizontal: true,
      alwaysBounceVertical: true,
      automaticallyAdjustContentInsets: true,
      automaticallyAdjustsScrollIndicatorInsets: true,
      bounces: true,
      bouncesZoom: true,
      canCancelContentTouches: true,
      centerContent: true,
      contentInset: {
        diff: require('../../Utilities/differ/pointsDiffer')
      },
      contentOffset: {
        diff: require('../../Utilities/differ/pointsDiffer')
      },
      contentInsetAdjustmentBehavior: true,
      decelerationRate: true,
      directionalLockEnabled: true,
      disableIntervalMomentum: true,
      endFillColor: {
        process: require('../../StyleSheet/processColor')
      },
      fadingEdgeLength: true,
      indicatorStyle: true,
      inverted: true,
      keyboardDismissMode: true,
      maintainVisibleContentPosition: true,
      maximumZoomScale: true,
      minimumZoomScale: true,
      nestedScrollEnabled: true,
      onMomentumScrollBegin: true,
      onMomentumScrollEnd: true,
      onScroll: true,
      onScrollBeginDrag: true,
      onScrollEndDrag: true,
      onScrollToTop: true,
      overScrollMode: true,
      pagingEnabled: true,
      persistentScrollbar: true,
      pinchGestureEnabled: true,
      scrollEnabled: true,
      scrollEventThrottle: true,
      scrollIndicatorInsets: {
        diff: require('../../Utilities/differ/pointsDiffer')
      },
      scrollPerfTag: true,
      scrollToOverflowEnabled: true,
      scrollsToTop: true,
      sendMomentumEvents: true,
      showsHorizontalScrollIndicator: true,
      showsVerticalScrollIndicator: true,
      snapToAlignment: true,
      snapToEnd: true,
      snapToInterval: true,
      snapToOffsets: true,
      snapToStart: true,
      zoomScale: true
    }
  };
});
var _default = ScrollViewNativeComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50IiwiTmF0aXZlQ29tcG9uZW50UmVnaXN0cnkiLCJnZXQiLCJ1aVZpZXdDbGFzc05hbWUiLCJidWJibGluZ0V2ZW50VHlwZXMiLCJkaXJlY3RFdmVudFR5cGVzIiwidG9wU2Nyb2xsVG9Ub3AiLCJyZWdpc3RyYXRpb25OYW1lIiwidmFsaWRBdHRyaWJ1dGVzIiwiYWx3YXlzQm91bmNlSG9yaXpvbnRhbCIsImFsd2F5c0JvdW5jZVZlcnRpY2FsIiwiYXV0b21hdGljYWxseUFkanVzdENvbnRlbnRJbnNldHMiLCJhdXRvbWF0aWNhbGx5QWRqdXN0c1Njcm9sbEluZGljYXRvckluc2V0cyIsImJvdW5jZXMiLCJib3VuY2VzWm9vbSIsImNhbkNhbmNlbENvbnRlbnRUb3VjaGVzIiwiY2VudGVyQ29udGVudCIsImNvbnRlbnRJbnNldCIsImRpZmYiLCJyZXF1aXJlIiwiY29udGVudE9mZnNldCIsImNvbnRlbnRJbnNldEFkanVzdG1lbnRCZWhhdmlvciIsImRlY2VsZXJhdGlvblJhdGUiLCJkaXJlY3Rpb25hbExvY2tFbmFibGVkIiwiZGlzYWJsZUludGVydmFsTW9tZW50dW0iLCJlbmRGaWxsQ29sb3IiLCJwcm9jZXNzIiwiZmFkaW5nRWRnZUxlbmd0aCIsImluZGljYXRvclN0eWxlIiwiaW52ZXJ0ZWQiLCJrZXlib2FyZERpc21pc3NNb2RlIiwibWFpbnRhaW5WaXNpYmxlQ29udGVudFBvc2l0aW9uIiwibWF4aW11bVpvb21TY2FsZSIsIm1pbmltdW1ab29tU2NhbGUiLCJuZXN0ZWRTY3JvbGxFbmFibGVkIiwib25Nb21lbnR1bVNjcm9sbEJlZ2luIiwib25Nb21lbnR1bVNjcm9sbEVuZCIsIm9uU2Nyb2xsIiwib25TY3JvbGxCZWdpbkRyYWciLCJvblNjcm9sbEVuZERyYWciLCJvblNjcm9sbFRvVG9wIiwib3ZlclNjcm9sbE1vZGUiLCJwYWdpbmdFbmFibGVkIiwicGVyc2lzdGVudFNjcm9sbGJhciIsInBpbmNoR2VzdHVyZUVuYWJsZWQiLCJzY3JvbGxFbmFibGVkIiwic2Nyb2xsRXZlbnRUaHJvdHRsZSIsInNjcm9sbEluZGljYXRvckluc2V0cyIsInNjcm9sbFBlcmZUYWciLCJzY3JvbGxUb092ZXJmbG93RW5hYmxlZCIsInNjcm9sbHNUb1RvcCIsInNlbmRNb21lbnR1bUV2ZW50cyIsInNob3dzSG9yaXpvbnRhbFNjcm9sbEluZGljYXRvciIsInNob3dzVmVydGljYWxTY3JvbGxJbmRpY2F0b3IiLCJzbmFwVG9BbGlnbm1lbnQiLCJzbmFwVG9FbmQiLCJzbmFwVG9JbnRlcnZhbCIsInNuYXBUb09mZnNldHMiLCJzbmFwVG9TdGFydCIsInpvb21TY2FsZSJdLCJzb3VyY2VzIjpbIlNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgdHlwZSB7U2Nyb2xsVmlld05hdGl2ZVByb3BzIGFzIFByb3BzfSBmcm9tICcuL1Njcm9sbFZpZXdOYXRpdmVDb21wb25lbnRUeXBlJztcbmltcG9ydCB0eXBlIHtIb3N0Q29tcG9uZW50fSBmcm9tICcuLi8uLi9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVR5cGVzJztcbmltcG9ydCAqIGFzIE5hdGl2ZUNvbXBvbmVudFJlZ2lzdHJ5IGZyb20gJy4uLy4uL05hdGl2ZUNvbXBvbmVudC9OYXRpdmVDb21wb25lbnRSZWdpc3RyeSc7XG5cbmNvbnN0IFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQ6IEhvc3RDb21wb25lbnQ8UHJvcHM+ID0gTmF0aXZlQ29tcG9uZW50UmVnaXN0cnkuZ2V0PFByb3BzPihcbiAgJ1JDVFNjcm9sbFZpZXcnLFxuICAoKSA9PiAoe1xuICAgIHVpVmlld0NsYXNzTmFtZTogJ1JDVFNjcm9sbFZpZXcnLFxuICAgIGJ1YmJsaW5nRXZlbnRUeXBlczoge30sXG4gICAgZGlyZWN0RXZlbnRUeXBlczoge1xuICAgICAgdG9wU2Nyb2xsVG9Ub3A6IHtcbiAgICAgICAgcmVnaXN0cmF0aW9uTmFtZTogJ29uU2Nyb2xsVG9Ub3AnLFxuICAgICAgfSxcbiAgICB9LFxuICAgIHZhbGlkQXR0cmlidXRlczoge1xuICAgICAgYWx3YXlzQm91bmNlSG9yaXpvbnRhbDogdHJ1ZSxcbiAgICAgIGFsd2F5c0JvdW5jZVZlcnRpY2FsOiB0cnVlLFxuICAgICAgYXV0b21hdGljYWxseUFkanVzdENvbnRlbnRJbnNldHM6IHRydWUsXG4gICAgICBhdXRvbWF0aWNhbGx5QWRqdXN0c1Njcm9sbEluZGljYXRvckluc2V0czogdHJ1ZSxcbiAgICAgIGJvdW5jZXM6IHRydWUsXG4gICAgICBib3VuY2VzWm9vbTogdHJ1ZSxcbiAgICAgIGNhbkNhbmNlbENvbnRlbnRUb3VjaGVzOiB0cnVlLFxuICAgICAgY2VudGVyQ29udGVudDogdHJ1ZSxcbiAgICAgIGNvbnRlbnRJbnNldDoge1xuICAgICAgICBkaWZmOiByZXF1aXJlKCcuLi8uLi9VdGlsaXRpZXMvZGlmZmVyL3BvaW50c0RpZmZlcicpLFxuICAgICAgfSxcbiAgICAgIGNvbnRlbnRPZmZzZXQ6IHtcbiAgICAgICAgZGlmZjogcmVxdWlyZSgnLi4vLi4vVXRpbGl0aWVzL2RpZmZlci9wb2ludHNEaWZmZXInKSxcbiAgICAgIH0sXG4gICAgICBjb250ZW50SW5zZXRBZGp1c3RtZW50QmVoYXZpb3I6IHRydWUsXG4gICAgICBkZWNlbGVyYXRpb25SYXRlOiB0cnVlLFxuICAgICAgZGlyZWN0aW9uYWxMb2NrRW5hYmxlZDogdHJ1ZSxcbiAgICAgIGRpc2FibGVJbnRlcnZhbE1vbWVudHVtOiB0cnVlLFxuICAgICAgZW5kRmlsbENvbG9yOiB7XG4gICAgICAgIHByb2Nlc3M6IHJlcXVpcmUoJy4uLy4uL1N0eWxlU2hlZXQvcHJvY2Vzc0NvbG9yJyksXG4gICAgICB9LFxuICAgICAgZmFkaW5nRWRnZUxlbmd0aDogdHJ1ZSxcbiAgICAgIGluZGljYXRvclN0eWxlOiB0cnVlLFxuICAgICAgaW52ZXJ0ZWQ6IHRydWUsXG4gICAgICBrZXlib2FyZERpc21pc3NNb2RlOiB0cnVlLFxuICAgICAgbWFpbnRhaW5WaXNpYmxlQ29udGVudFBvc2l0aW9uOiB0cnVlLFxuICAgICAgbWF4aW11bVpvb21TY2FsZTogdHJ1ZSxcbiAgICAgIG1pbmltdW1ab29tU2NhbGU6IHRydWUsXG4gICAgICBuZXN0ZWRTY3JvbGxFbmFibGVkOiB0cnVlLFxuICAgICAgb25Nb21lbnR1bVNjcm9sbEJlZ2luOiB0cnVlLFxuICAgICAgb25Nb21lbnR1bVNjcm9sbEVuZDogdHJ1ZSxcbiAgICAgIG9uU2Nyb2xsOiB0cnVlLFxuICAgICAgb25TY3JvbGxCZWdpbkRyYWc6IHRydWUsXG4gICAgICBvblNjcm9sbEVuZERyYWc6IHRydWUsXG4gICAgICBvblNjcm9sbFRvVG9wOiB0cnVlLFxuICAgICAgb3ZlclNjcm9sbE1vZGU6IHRydWUsXG4gICAgICBwYWdpbmdFbmFibGVkOiB0cnVlLFxuICAgICAgcGVyc2lzdGVudFNjcm9sbGJhcjogdHJ1ZSxcbiAgICAgIHBpbmNoR2VzdHVyZUVuYWJsZWQ6IHRydWUsXG4gICAgICBzY3JvbGxFbmFibGVkOiB0cnVlLFxuICAgICAgc2Nyb2xsRXZlbnRUaHJvdHRsZTogdHJ1ZSxcbiAgICAgIHNjcm9sbEluZGljYXRvckluc2V0czoge1xuICAgICAgICBkaWZmOiByZXF1aXJlKCcuLi8uLi9VdGlsaXRpZXMvZGlmZmVyL3BvaW50c0RpZmZlcicpLFxuICAgICAgfSxcbiAgICAgIHNjcm9sbFBlcmZUYWc6IHRydWUsXG4gICAgICBzY3JvbGxUb092ZXJmbG93RW5hYmxlZDogdHJ1ZSxcbiAgICAgIHNjcm9sbHNUb1RvcDogdHJ1ZSxcbiAgICAgIHNlbmRNb21lbnR1bUV2ZW50czogdHJ1ZSxcbiAgICAgIHNob3dzSG9yaXpvbnRhbFNjcm9sbEluZGljYXRvcjogdHJ1ZSxcbiAgICAgIHNob3dzVmVydGljYWxTY3JvbGxJbmRpY2F0b3I6IHRydWUsXG4gICAgICBzbmFwVG9BbGlnbm1lbnQ6IHRydWUsXG4gICAgICBzbmFwVG9FbmQ6IHRydWUsXG4gICAgICBzbmFwVG9JbnRlcnZhbDogdHJ1ZSxcbiAgICAgIHNuYXBUb09mZnNldHM6IHRydWUsXG4gICAgICBzbmFwVG9TdGFydDogdHJ1ZSxcbiAgICAgIHpvb21TY2FsZTogdHJ1ZSxcbiAgICB9LFxuICB9KSxcbik7XG5cbmV4cG9ydCBkZWZhdWx0IFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQ7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBWUE7Ozs7OztBQUVBLElBQU1BLHlCQUErQyxHQUFHQyx1QkFBdUIsQ0FBQ0MsR0FBeEIsQ0FDdEQsZUFEc0QsRUFFdEQ7RUFBQSxPQUFPO0lBQ0xDLGVBQWUsRUFBRSxlQURaO0lBRUxDLGtCQUFrQixFQUFFLEVBRmY7SUFHTEMsZ0JBQWdCLEVBQUU7TUFDaEJDLGNBQWMsRUFBRTtRQUNkQyxnQkFBZ0IsRUFBRTtNQURKO0lBREEsQ0FIYjtJQVFMQyxlQUFlLEVBQUU7TUFDZkMsc0JBQXNCLEVBQUUsSUFEVDtNQUVmQyxvQkFBb0IsRUFBRSxJQUZQO01BR2ZDLGdDQUFnQyxFQUFFLElBSG5CO01BSWZDLHlDQUF5QyxFQUFFLElBSjVCO01BS2ZDLE9BQU8sRUFBRSxJQUxNO01BTWZDLFdBQVcsRUFBRSxJQU5FO01BT2ZDLHVCQUF1QixFQUFFLElBUFY7TUFRZkMsYUFBYSxFQUFFLElBUkE7TUFTZkMsWUFBWSxFQUFFO1FBQ1pDLElBQUksRUFBRUMsT0FBTyxDQUFDLHFDQUFEO01BREQsQ0FUQztNQVlmQyxhQUFhLEVBQUU7UUFDYkYsSUFBSSxFQUFFQyxPQUFPLENBQUMscUNBQUQ7TUFEQSxDQVpBO01BZWZFLDhCQUE4QixFQUFFLElBZmpCO01BZ0JmQyxnQkFBZ0IsRUFBRSxJQWhCSDtNQWlCZkMsc0JBQXNCLEVBQUUsSUFqQlQ7TUFrQmZDLHVCQUF1QixFQUFFLElBbEJWO01BbUJmQyxZQUFZLEVBQUU7UUFDWkMsT0FBTyxFQUFFUCxPQUFPLENBQUMsK0JBQUQ7TUFESixDQW5CQztNQXNCZlEsZ0JBQWdCLEVBQUUsSUF0Qkg7TUF1QmZDLGNBQWMsRUFBRSxJQXZCRDtNQXdCZkMsUUFBUSxFQUFFLElBeEJLO01BeUJmQyxtQkFBbUIsRUFBRSxJQXpCTjtNQTBCZkMsOEJBQThCLEVBQUUsSUExQmpCO01BMkJmQyxnQkFBZ0IsRUFBRSxJQTNCSDtNQTRCZkMsZ0JBQWdCLEVBQUUsSUE1Qkg7TUE2QmZDLG1CQUFtQixFQUFFLElBN0JOO01BOEJmQyxxQkFBcUIsRUFBRSxJQTlCUjtNQStCZkMsbUJBQW1CLEVBQUUsSUEvQk47TUFnQ2ZDLFFBQVEsRUFBRSxJQWhDSztNQWlDZkMsaUJBQWlCLEVBQUUsSUFqQ0o7TUFrQ2ZDLGVBQWUsRUFBRSxJQWxDRjtNQW1DZkMsYUFBYSxFQUFFLElBbkNBO01Bb0NmQyxjQUFjLEVBQUUsSUFwQ0Q7TUFxQ2ZDLGFBQWEsRUFBRSxJQXJDQTtNQXNDZkMsbUJBQW1CLEVBQUUsSUF0Q047TUF1Q2ZDLG1CQUFtQixFQUFFLElBdkNOO01Bd0NmQyxhQUFhLEVBQUUsSUF4Q0E7TUF5Q2ZDLG1CQUFtQixFQUFFLElBekNOO01BMENmQyxxQkFBcUIsRUFBRTtRQUNyQjdCLElBQUksRUFBRUMsT0FBTyxDQUFDLHFDQUFEO01BRFEsQ0ExQ1I7TUE2Q2Y2QixhQUFhLEVBQUUsSUE3Q0E7TUE4Q2ZDLHVCQUF1QixFQUFFLElBOUNWO01BK0NmQyxZQUFZLEVBQUUsSUEvQ0M7TUFnRGZDLGtCQUFrQixFQUFFLElBaERMO01BaURmQyw4QkFBOEIsRUFBRSxJQWpEakI7TUFrRGZDLDRCQUE0QixFQUFFLElBbERmO01BbURmQyxlQUFlLEVBQUUsSUFuREY7TUFvRGZDLFNBQVMsRUFBRSxJQXBESTtNQXFEZkMsY0FBYyxFQUFFLElBckREO01Bc0RmQyxhQUFhLEVBQUUsSUF0REE7TUF1RGZDLFdBQVcsRUFBRSxJQXZERTtNQXdEZkMsU0FBUyxFQUFFO0lBeERJO0VBUlosQ0FBUDtBQUFBLENBRnNELENBQXhEO2VBdUVlM0QseUIifQ==