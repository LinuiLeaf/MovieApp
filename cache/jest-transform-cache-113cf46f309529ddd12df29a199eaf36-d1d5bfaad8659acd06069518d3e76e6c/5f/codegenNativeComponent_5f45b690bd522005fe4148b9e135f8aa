92b39e869da40f994b3a55e1a4ba706d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _requireNativeComponent = _interopRequireDefault(require("../../Libraries/ReactNative/requireNativeComponent"));

var _UIManager = _interopRequireDefault(require("../ReactNative/UIManager"));

function codegenNativeComponent(componentName, options) {
  var componentNameInUse = options && options.paperComponentName != null ? options.paperComponentName : componentName;

  if (options != null && options.paperComponentNameDeprecated != null) {
    if (_UIManager.default.getViewManagerConfig(componentName)) {
      componentNameInUse = componentName;
    } else if (options.paperComponentNameDeprecated != null && _UIManager.default.getViewManagerConfig(options.paperComponentNameDeprecated)) {
      componentNameInUse = options.paperComponentNameDeprecated;
    } else {
      var _options$paperCompone;

      throw new Error("Failed to find native component for either " + componentName + " or " + ((_options$paperCompone = options.paperComponentNameDeprecated) != null ? _options$paperCompone : '(unknown)'));
    }
  }

  return (0, _requireNativeComponent.default)(componentNameInUse);
}

var _default = codegenNativeComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb2RlZ2VuTmF0aXZlQ29tcG9uZW50IiwiY29tcG9uZW50TmFtZSIsIm9wdGlvbnMiLCJjb21wb25lbnROYW1lSW5Vc2UiLCJwYXBlckNvbXBvbmVudE5hbWUiLCJwYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkIiwiVUlNYW5hZ2VyIiwiZ2V0Vmlld01hbmFnZXJDb25maWciLCJFcnJvciIsInJlcXVpcmVOYXRpdmVDb21wb25lbnQiXSwic291cmNlcyI6WyJjb2RlZ2VuTmF0aXZlQ29tcG9uZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKi9cblxuLy8gVE9ETzogbW92ZSB0aGlzIGZpbGUgdG8gc2hpbXMvUmVhY3ROYXRpdmUgKHJlcXVpcmVzIFJlYWN0IHVwZGF0ZSBhbmQgc3luYylcblxuaW1wb3J0IHJlcXVpcmVOYXRpdmVDb21wb25lbnQgZnJvbSAnLi4vLi4vTGlicmFyaWVzL1JlYWN0TmF0aXZlL3JlcXVpcmVOYXRpdmVDb21wb25lbnQnO1xuaW1wb3J0IHR5cGUge0hvc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL0xpYnJhcmllcy9SZW5kZXJlci9zaGltcy9SZWFjdE5hdGl2ZVR5cGVzJztcbmltcG9ydCBVSU1hbmFnZXIgZnJvbSAnLi4vUmVhY3ROYXRpdmUvVUlNYW5hZ2VyJztcblxuLy8gVE9ETzogaW1wb3J0IGZyb20gQ29kZWdlblNjaGVtYSBvbmNlIHdvcmtzcGFjZXMgYXJlIGVuYWJsZWRcbnR5cGUgT3B0aW9ucyA9ICRSZWFkT25seTx7fFxuICBpbnRlcmZhY2VPbmx5PzogYm9vbGVhbixcbiAgcGFwZXJDb21wb25lbnROYW1lPzogc3RyaW5nLFxuICBwYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkPzogc3RyaW5nLFxuICBleGNsdWRlZFBsYXRmb3Jtcz86ICRSZWFkT25seUFycmF5PCdpT1MnIHwgJ2FuZHJvaWQnPixcbnx9PjtcblxuZXhwb3J0IHR5cGUgTmF0aXZlQ29tcG9uZW50VHlwZTxUPiA9IEhvc3RDb21wb25lbnQ8VD47XG5cbmZ1bmN0aW9uIGNvZGVnZW5OYXRpdmVDb21wb25lbnQ8UHJvcHM+KFxuICBjb21wb25lbnROYW1lOiBzdHJpbmcsXG4gIG9wdGlvbnM/OiBPcHRpb25zLFxuKTogTmF0aXZlQ29tcG9uZW50VHlwZTxQcm9wcz4ge1xuICBsZXQgY29tcG9uZW50TmFtZUluVXNlID1cbiAgICBvcHRpb25zICYmIG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lICE9IG51bGxcbiAgICAgID8gb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVcbiAgICAgIDogY29tcG9uZW50TmFtZTtcblxuICBpZiAob3B0aW9ucyAhPSBudWxsICYmIG9wdGlvbnMucGFwZXJDb21wb25lbnROYW1lRGVwcmVjYXRlZCAhPSBudWxsKSB7XG4gICAgaWYgKFVJTWFuYWdlci5nZXRWaWV3TWFuYWdlckNvbmZpZyhjb21wb25lbnROYW1lKSkge1xuICAgICAgY29tcG9uZW50TmFtZUluVXNlID0gY29tcG9uZW50TmFtZTtcbiAgICB9IGVsc2UgaWYgKFxuICAgICAgb3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkICE9IG51bGwgJiZcbiAgICAgIFVJTWFuYWdlci5nZXRWaWV3TWFuYWdlckNvbmZpZyhvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQpXG4gICAgKSB7XG4gICAgICBjb21wb25lbnROYW1lSW5Vc2UgPSBvcHRpb25zLnBhcGVyQ29tcG9uZW50TmFtZURlcHJlY2F0ZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgYEZhaWxlZCB0byBmaW5kIG5hdGl2ZSBjb21wb25lbnQgZm9yIGVpdGhlciAke2NvbXBvbmVudE5hbWV9IG9yICR7b3B0aW9ucy5wYXBlckNvbXBvbmVudE5hbWVEZXByZWNhdGVkID8/XG4gICAgICAgICAgJyh1bmtub3duKSd9YCxcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgLy8gSWYgdGhpcyBmdW5jdGlvbiBpcyBydW4gYXQgcnVudGltZSB0aGVuIHRoYXQgbWVhbnMgdGhlIHZpZXcgY29uZmlncyB3ZXJlIG5vdFxuICAvLyBnZW5lcmF0ZWQgd2l0aCB0aGUgdmlldyBjb25maWcgYmFiZWwgcGx1Z2luLCBzbyB3ZSBuZWVkIHRvIHJlcXVpcmUgdGhlIG5hdGl2ZSBjb21wb25lbnQuXG4gIC8vXG4gIC8vIFRoaXMgd2lsbCBiZSB1c2VmdWwgZHVyaW5nIG1pZ3JhdGlvbiwgYnV0IGV2ZW50dWFsbHkgdGhpcyB3aWxsIGVycm9yLlxuICByZXR1cm4gKHJlcXVpcmVOYXRpdmVDb21wb25lbnQ8UHJvcHM+KFxuICAgIGNvbXBvbmVudE5hbWVJblVzZSxcbiAgKTogSG9zdENvbXBvbmVudDxQcm9wcz4pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjb2RlZ2VuTmF0aXZlQ29tcG9uZW50O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBWUE7O0FBRUE7O0FBWUEsU0FBU0Esc0JBQVQsQ0FDRUMsYUFERixFQUVFQyxPQUZGLEVBRzhCO0VBQzVCLElBQUlDLGtCQUFrQixHQUNwQkQsT0FBTyxJQUFJQSxPQUFPLENBQUNFLGtCQUFSLElBQThCLElBQXpDLEdBQ0lGLE9BQU8sQ0FBQ0Usa0JBRFosR0FFSUgsYUFITjs7RUFLQSxJQUFJQyxPQUFPLElBQUksSUFBWCxJQUFtQkEsT0FBTyxDQUFDRyw0QkFBUixJQUF3QyxJQUEvRCxFQUFxRTtJQUNuRSxJQUFJQyxrQkFBQSxDQUFVQyxvQkFBVixDQUErQk4sYUFBL0IsQ0FBSixFQUFtRDtNQUNqREUsa0JBQWtCLEdBQUdGLGFBQXJCO0lBQ0QsQ0FGRCxNQUVPLElBQ0xDLE9BQU8sQ0FBQ0csNEJBQVIsSUFBd0MsSUFBeEMsSUFDQUMsa0JBQUEsQ0FBVUMsb0JBQVYsQ0FBK0JMLE9BQU8sQ0FBQ0csNEJBQXZDLENBRkssRUFHTDtNQUNBRixrQkFBa0IsR0FBR0QsT0FBTyxDQUFDRyw0QkFBN0I7SUFDRCxDQUxNLE1BS0E7TUFBQTs7TUFDTCxNQUFNLElBQUlHLEtBQUosaURBQzBDUCxhQUQxQyxzQ0FDOERDLE9BQU8sQ0FBQ0csNEJBRHRFLG9DQUVGLFdBRkUsRUFBTjtJQUlEO0VBQ0Y7O0VBTUQsT0FBUSxJQUFBSSwrQkFBQSxFQUNOTixrQkFETSxDQUFSO0FBR0Q7O2VBRWNILHNCIn0=