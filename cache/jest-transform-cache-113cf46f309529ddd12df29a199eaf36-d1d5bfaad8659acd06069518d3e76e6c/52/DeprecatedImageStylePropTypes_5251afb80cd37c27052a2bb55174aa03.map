{"version":3,"names":["DeprecatedColorPropType","require","DeprecatedLayoutPropTypes","DeprecatedShadowPropTypesIOS","DeprecatedTransformPropTypes","ReactPropTypes","ImageStylePropTypes","resizeMode","oneOf","backfaceVisibility","backgroundColor","borderColor","borderWidth","number","borderRadius","overflow","tintColor","opacity","overlayColor","string","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","module","exports"],"sources":["DeprecatedImageStylePropTypes.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst DeprecatedColorPropType = require('./DeprecatedColorPropType');\nconst DeprecatedLayoutPropTypes = require('./DeprecatedLayoutPropTypes');\nconst DeprecatedShadowPropTypesIOS = require('./DeprecatedShadowPropTypesIOS');\nconst DeprecatedTransformPropTypes = require('./DeprecatedTransformPropTypes');\nconst ReactPropTypes = require('prop-types');\n\nconst ImageStylePropTypes = {\n  ...DeprecatedLayoutPropTypes,\n  ...DeprecatedShadowPropTypesIOS,\n  ...DeprecatedTransformPropTypes,\n  resizeMode: (ReactPropTypes.oneOf([\n    'center',\n    'contain',\n    'cover',\n    'repeat',\n    'stretch',\n  ]): React$PropType$Primitive<\n    'center' | 'contain' | 'cover' | 'repeat' | 'stretch',\n  >),\n  backfaceVisibility: (ReactPropTypes.oneOf([\n    'visible',\n    'hidden',\n  ]): React$PropType$Primitive<'visible' | 'hidden'>),\n  backgroundColor: DeprecatedColorPropType,\n  borderColor: DeprecatedColorPropType,\n  borderWidth: ReactPropTypes.number,\n  borderRadius: ReactPropTypes.number,\n  overflow: (ReactPropTypes.oneOf([\n    'visible',\n    'hidden',\n  ]): React$PropType$Primitive<'visible' | 'hidden'>),\n\n  /**\n   * Changes the color of all the non-transparent pixels to the tintColor.\n   */\n  tintColor: DeprecatedColorPropType,\n  opacity: ReactPropTypes.number,\n  /**\n   * When the image has rounded corners, specifying an overlayColor will\n   * cause the remaining space in the corners to be filled with a solid color.\n   * This is useful in cases which are not supported by the Android\n   * implementation of rounded corners:\n   *   - Certain resize modes, such as 'contain'\n   *   - Animated GIFs\n   *\n   * A typical way to use this prop is with images displayed on a solid\n   * background and setting the `overlayColor` to the same color\n   * as the background.\n   *\n   * For details of how this works under the hood, see\n   * http://frescolib.org/docs/rounded-corners-and-circles.html\n   *\n   * @platform android\n   */\n  overlayColor: ReactPropTypes.string,\n\n  // Android-Specific styles\n  borderTopLeftRadius: ReactPropTypes.number,\n  borderTopRightRadius: ReactPropTypes.number,\n  borderBottomLeftRadius: ReactPropTypes.number,\n  borderBottomRightRadius: ReactPropTypes.number,\n};\n\nmodule.exports = ImageStylePropTypes;\n"],"mappings":"AAUA;;;;;;AAEA,IAAMA,uBAAuB,GAAGC,OAAO,CAAC,2BAAD,CAAvC;;AACA,IAAMC,yBAAyB,GAAGD,OAAO,CAAC,6BAAD,CAAzC;;AACA,IAAME,4BAA4B,GAAGF,OAAO,CAAC,gCAAD,CAA5C;;AACA,IAAMG,4BAA4B,GAAGH,OAAO,CAAC,gCAAD,CAA5C;;AACA,IAAMI,cAAc,GAAGJ,OAAO,CAAC,YAAD,CAA9B;;AAEA,IAAMK,mBAAmB,8BACpBJ,yBADoB,EAEpBC,4BAFoB,EAGpBC,4BAHoB;EAIvBG,UAAU,EAAGF,cAAc,CAACG,KAAf,CAAqB,CAChC,QADgC,EAEhC,SAFgC,EAGhC,OAHgC,EAIhC,QAJgC,EAKhC,SALgC,CAArB,CAJU;EAavBC,kBAAkB,EAAGJ,cAAc,CAACG,KAAf,CAAqB,CACxC,SADwC,EAExC,QAFwC,CAArB,CAbE;EAiBvBE,eAAe,EAAEV,uBAjBM;EAkBvBW,WAAW,EAAEX,uBAlBU;EAmBvBY,WAAW,EAAEP,cAAc,CAACQ,MAnBL;EAoBvBC,YAAY,EAAET,cAAc,CAACQ,MApBN;EAqBvBE,QAAQ,EAAGV,cAAc,CAACG,KAAf,CAAqB,CAC9B,SAD8B,EAE9B,QAF8B,CAArB,CArBY;EA6BvBQ,SAAS,EAAEhB,uBA7BY;EA8BvBiB,OAAO,EAAEZ,cAAc,CAACQ,MA9BD;EAgDvBK,YAAY,EAAEb,cAAc,CAACc,MAhDN;EAmDvBC,mBAAmB,EAAEf,cAAc,CAACQ,MAnDb;EAoDvBQ,oBAAoB,EAAEhB,cAAc,CAACQ,MApDd;EAqDvBS,sBAAsB,EAAEjB,cAAc,CAACQ,MArDhB;EAsDvBU,uBAAuB,EAAElB,cAAc,CAACQ;AAtDjB,EAAzB;AAyDAW,MAAM,CAACC,OAAP,GAAiBnB,mBAAjB"}