{"version":3,"names":["View","require","AnimatedEvent","AnimatedProps","React","NativeAnimatedHelper","invariant","setAndForwardRef","animatedComponentNextId","createAnimatedComponent","Component","options","prototype","isReactComponent","AnimatedComponent","_invokeAnimatedPropsCallbackOnMount","_eventDetachers","_animatedComponentId","_isFabric","_component","stateNode","canonical","getNativeScrollRef","getScrollResponder","_waitForUpdate","API","setWaitingForIdentifier","_markUpdateComplete","unsetWaitingForIdentifier","_animatedPropsCallback","process","env","NODE_ENV","setNativeProps","forceUpdate","_propsAnimated","__isNative","__getAnimatedValue","Error","_setComponentRef","getForwardedRef","props","forwardedRef","setLocalRef","ref","_prevComponent","scrollableNode","getScrollableNode","key","prop","__attach","push","__detach","forEach","remove","nextProps","oldPropsAnimated","__restoreDefaultValues","__getValue","style","passthroughAnimatedPropExplicitValues","passthruStyle","passthruProps","mergedStyle","forceNativeIdFabric","collapsable","forceNativeId","collapsableProps","nativeID","_attachProps","setNativeView","_attachNativeEvents","newProps","prevProps","_detachNativeEvents","forwardRef","AnimatedComponentWrapper","module","exports","createAnimatedComponentInjection","recordAndRetrieve"],"sources":["createAnimatedComponent.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport * as createAnimatedComponentInjection from './createAnimatedComponentInjection';\n\nconst View = require('../Components/View/View');\nconst {AnimatedEvent} = require('./AnimatedEvent');\nconst AnimatedProps = require('./nodes/AnimatedProps');\nconst React = require('react');\nconst NativeAnimatedHelper = require('./NativeAnimatedHelper');\n\nconst invariant = require('invariant');\nconst setAndForwardRef = require('../Utilities/setAndForwardRef');\n\nlet animatedComponentNextId = 1;\n\nexport type AnimatedComponentType<\n  Props: {+[string]: mixed, ...},\n  Instance,\n> = React.AbstractComponent<\n  $ObjMap<\n    Props &\n      $ReadOnly<{\n        passthroughAnimatedPropExplicitValues?: React.ElementConfig<\n          typeof View,\n        >,\n      }>,\n    () => any,\n  >,\n  Instance,\n>;\n\ntype AnimatedComponentOptions = {\n  collapsable?: boolean,\n};\n\nfunction createAnimatedComponent<Props: {+[string]: mixed, ...}, Instance>(\n  Component: React.AbstractComponent<Props, Instance>,\n  options?: AnimatedComponentOptions,\n): AnimatedComponentType<Props, Instance> {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    '`createAnimatedComponent` does not support stateless functional components; ' +\n      'use a class component instead.',\n  );\n\n  class AnimatedComponent extends React.Component<Object> {\n    _component: any; // TODO T53738161: flow type this, and the whole file\n    _invokeAnimatedPropsCallbackOnMount: boolean = false;\n    _prevComponent: any;\n    _propsAnimated: AnimatedProps;\n    _eventDetachers: Array<Function> = [];\n\n    // Only to be used in this file, and only in Fabric.\n    _animatedComponentId: string = `${animatedComponentNextId++}:animatedComponent`;\n\n    _attachNativeEvents() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      const scrollableNode = this._component?.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent && prop.__isNative) {\n          prop.__attach(scrollableNode, key);\n          this._eventDetachers.push(() => prop.__detach(scrollableNode, key));\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      this._eventDetachers.forEach(remove => remove());\n      this._eventDetachers = [];\n    }\n\n    _isFabric = (): boolean => {\n      // When called during the first render, `_component` is always null.\n      // Therefore, even if a component is rendered in Fabric, we can't detect\n      // that until ref is set, which happens sometime after the first render.\n      // In cases where this value switching between \"false\" and \"true\" on Fabric\n      // causes issues, add an additional check for _component nullity.\n      if (this._component == null) {\n        return false;\n      }\n      return (\n        // eslint-disable-next-line dot-notation\n        this._component['_internalInstanceHandle']?.stateNode?.canonical !=\n          null ||\n        // Some components have a setNativeProps function but aren't a host component\n        // such as lists like FlatList and SectionList. These should also use\n        // forceUpdate in Fabric since setNativeProps doesn't exist on the underlying\n        // host component. This crazy hack is essentially special casing those lists and\n        // ScrollView itself to use forceUpdate in Fabric.\n        // If these components end up using forwardRef then these hacks can go away\n        // as this._component would actually be the underlying host component and the above check\n        // would be sufficient.\n        (this._component.getNativeScrollRef != null &&\n          this._component.getNativeScrollRef() != null &&\n          // eslint-disable-next-line dot-notation\n          this._component.getNativeScrollRef()['_internalInstanceHandle']\n            ?.stateNode?.canonical != null) ||\n        (this._component.getScrollResponder != null &&\n          this._component.getScrollResponder() != null &&\n          this._component.getScrollResponder().getNativeScrollRef != null &&\n          this._component.getScrollResponder().getNativeScrollRef() != null &&\n          this._component.getScrollResponder().getNativeScrollRef()[\n            // eslint-disable-next-line dot-notation\n            '_internalInstanceHandle'\n          ]?.stateNode?.canonical != null)\n      );\n    };\n\n    _waitForUpdate = (): void => {\n      if (this._isFabric()) {\n        NativeAnimatedHelper.API.setWaitingForIdentifier(\n          this._animatedComponentId,\n        );\n      }\n    };\n\n    _markUpdateComplete = (): void => {\n      if (this._isFabric()) {\n        NativeAnimatedHelper.API.unsetWaitingForIdentifier(\n          this._animatedComponentId,\n        );\n      }\n    };\n\n    // The system is best designed when setNativeProps is implemented. It is\n    // able to avoid re-rendering and directly set the attributes that changed.\n    // However, setNativeProps can only be implemented on leaf native\n    // components. If you want to animate a composite component, you need to\n    // re-render it. In this case, we have a fallback that uses forceUpdate.\n    // This fallback is also called in Fabric.\n    _animatedPropsCallback = () => {\n      if (this._component == null) {\n        // AnimatedProps is created in will-mount because it's used in render.\n        // But this callback may be invoked before mount in async mode,\n        // In which case we should defer the setNativeProps() call.\n        // React may throw away uncommitted work in async mode,\n        // So a deferred call won't always be invoked.\n        this._invokeAnimatedPropsCallbackOnMount = true;\n      } else if (\n        process.env.NODE_ENV === 'test' ||\n        // For animating properties of non-leaf/non-native components\n        typeof this._component.setNativeProps !== 'function' ||\n        // In Fabric, force animations to go through forceUpdate and skip setNativeProps\n        this._isFabric()\n      ) {\n        this.forceUpdate();\n      } else if (!this._propsAnimated.__isNative) {\n        this._component.setNativeProps(\n          this._propsAnimated.__getAnimatedValue(),\n        );\n      } else {\n        throw new Error(\n          'Attempting to run JS driven animation on animated ' +\n            'node that has been moved to \"native\" earlier by starting an ' +\n            'animation with `useNativeDriver: true`',\n        );\n      }\n    };\n\n    _attachProps(nextProps) {\n      const oldPropsAnimated = this._propsAnimated;\n\n      this._propsAnimated = new AnimatedProps(\n        nextProps,\n        this._animatedPropsCallback,\n      );\n      this._propsAnimated.__attach();\n\n      // When you call detach, it removes the element from the parent list\n      // of children. If it goes to 0, then the parent also detaches itself\n      // and so on.\n      // An optimization is to attach the new elements and THEN detach the old\n      // ones instead of detaching and THEN attaching.\n      // This way the intermediate state isn't to go to 0 and trigger\n      // this expensive recursive detaching to then re-attach everything on\n      // the very next operation.\n      if (oldPropsAnimated) {\n        oldPropsAnimated.__restoreDefaultValues();\n        oldPropsAnimated.__detach();\n      }\n    }\n\n    _setComponentRef = setAndForwardRef({\n      getForwardedRef: () => this.props.forwardedRef,\n      setLocalRef: ref => {\n        this._prevComponent = this._component;\n        this._component = ref;\n      },\n    });\n\n    render() {\n      const {style = {}, ...props} = this._propsAnimated.__getValue() || {};\n      const {style: passthruStyle = {}, ...passthruProps} =\n        this.props.passthroughAnimatedPropExplicitValues || {};\n      const mergedStyle = {...style, ...passthruStyle};\n\n      // On Fabric, we always want to ensure the container Animated View is *not*\n      // flattened.\n      // Because we do not get a host component ref immediately and thus cannot\n      // do a proper Fabric vs non-Fabric detection immediately, we default to assuming\n      // that Fabric *is* enabled until we know otherwise.\n      // Thus, in Fabric, this view will never be flattened. In non-Fabric, the view will\n      // not be flattened during the initial render but may be flattened in the second render\n      // and onwards.\n      const forceNativeIdFabric =\n        (this._component == null &&\n          (options?.collapsable === false || props.collapsable !== true)) ||\n        this._isFabric();\n\n      const forceNativeId =\n        props.collapsable ??\n        (this._propsAnimated.__isNative ||\n          forceNativeIdFabric ||\n          options?.collapsable === false);\n      // The native driver updates views directly through the UI thread so we\n      // have to make sure the view doesn't get optimized away because it cannot\n      // go through the NativeViewHierarchyManager since it operates on the shadow\n      // thread. TODO: T68258846\n      const collapsableProps = forceNativeId\n        ? {\n            nativeID: props.nativeID ?? 'animatedComponent',\n            collapsable: false,\n          }\n        : {};\n      return (\n        <Component\n          {...props}\n          {...passthruProps}\n          {...collapsableProps}\n          style={mergedStyle}\n          ref={this._setComponentRef}\n        />\n      );\n    }\n\n    UNSAFE_componentWillMount() {\n      this._waitForUpdate();\n      this._attachProps(this.props);\n    }\n\n    componentDidMount() {\n      if (this._invokeAnimatedPropsCallbackOnMount) {\n        this._invokeAnimatedPropsCallbackOnMount = false;\n        this._animatedPropsCallback();\n      }\n\n      this._propsAnimated.setNativeView(this._component);\n      this._attachNativeEvents();\n      this._markUpdateComplete();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n      this._waitForUpdate();\n      this._attachProps(newProps);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this._component !== this._prevComponent) {\n        this._propsAnimated.setNativeView(this._component);\n      }\n      if (this._component !== this._prevComponent || prevProps !== this.props) {\n        this._detachNativeEvents();\n        this._attachNativeEvents();\n      }\n      this._markUpdateComplete();\n    }\n\n    componentWillUnmount() {\n      this._propsAnimated && this._propsAnimated.__detach();\n      this._detachNativeEvents();\n      this._markUpdateComplete();\n      this._component = null;\n      this._prevComponent = null;\n    }\n  }\n\n  return React.forwardRef(function AnimatedComponentWrapper(props, ref) {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref == null ? null : {forwardedRef: ref})}\n      />\n    );\n  });\n}\n\n// $FlowIgnore[incompatible-cast] - Will be compatible after refactors.\nmodule.exports = (createAnimatedComponentInjection.recordAndRetrieve() ??\n  createAnimatedComponent: typeof createAnimatedComponent);\n"],"mappings":"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"}