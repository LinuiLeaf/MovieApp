{"version":3,"names":["findTextElement","tree","element","describe","wrapper","renderer","create","toJSON","test","expect","toMatchSnapshot","it","render","getByAltText","image","screen","getByTestId","props","source","uri","toContain","toHaveStyle","toBeDefined"],"sources":["MovieDetails-test.js"],"sourcesContent":["/**\n * @format\n */\n\nimport \"react-native\";\nimport React from \"react\";\nimport MovieDetails from \"../app/screens/MovieDetails/MovieDetails\";\nimport constants from \"../app/config/constants\";\nimport { Image } from \"react-native\";\nimport { shallow, configure, mount } from \"enzyme\";\nimport { Provider } from \"react-redux\";\nimport store from \"../app/store/configureStore\";\n// Note: test renderer must be required after react-native.\nimport renderer from \"react-test-renderer\";\nimport { render, container, screen } from \"@testing-library/react-native\";\nimport { toHaveStyle } from \"@testing-library/jest-native\";\nimport \"@testing-library/jest-native/extend-expect\";\n\nlet findTextElement = function (tree, element) {\n  // console.warn(tree.children);\n  return true;\n};\n\ndescribe(\"Movie Details Screen \", () => {\n  const wrapper = renderer.create(<MovieDetails />).toJSON();\n\n  test(\"Snapshot \", () => {\n    expect(wrapper).toMatchSnapshot();\n  });\n  it(\"Image must contain an src\", async () => {\n    const { getByAltText } = await render(<MovieDetails />);\n\n    const image = screen.getByTestId(\"poster\");\n    expect(image.props.source.uri).toContain(\n      \"https://image.tmdb.org/t/p/w300undefined\"\n    );\n  });\n  it(\"Image must have a style\", async () => {\n    const { getByAltText } = await render(<MovieDetails />);\n\n    const image = screen.getByTestId(\"sub_poster\");\n    expect(image).toHaveStyle();\n  });\n  test(\"Images\", () => {\n    expect(findTextElement(wrapper, \"Images\")).toBeDefined();\n  });\n  test(\"Flatlist\", () => {\n    expect(findTextElement(wrapper, \"FlatList\")).toBeDefined();\n  });\n});\n"],"mappings":";;;;AAIA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA,IAAIA,eAAe,GAAG,SAAlBA,eAAkB,CAAUC,IAAV,EAAgBC,OAAhB,EAAyB;EAE7C,OAAO,IAAP;AACD,CAHD;;AAKAC,QAAQ,CAAC,uBAAD,EAA0B,YAAM;EACtC,IAAMC,OAAO,GAAGC,0BAAA,CAASC,MAAT,CAAgB,6BAAC,qBAAD,OAAhB,EAAkCC,MAAlC,EAAhB;;EAEAC,IAAI,CAAC,WAAD,EAAc,YAAM;IACtBC,MAAM,CAACL,OAAD,CAAN,CAAgBM,eAAhB;EACD,CAFG,CAAJ;EAGAC,EAAE,CAAC,2BAAD,EAA8B;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,kCACC,IAAAC,oBAAA,EAAO,6BAAC,qBAAD,OAAP,CADD;;UAAA;YAAA;YACtBC,YADsB,iBACtBA,YADsB;YAGxBC,KAHwB,GAGhBC,oBAAA,CAAOC,WAAP,CAAmB,QAAnB,CAHgB;YAI9BP,MAAM,CAACK,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,GAApB,CAAN,CAA+BC,SAA/B,CACE,0CADF;;UAJ8B;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA9B,CAAF;EAQAT,EAAE,CAAC,yBAAD,EAA4B;IAAA;;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,kCACG,IAAAC,oBAAA,EAAO,6BAAC,qBAAD,OAAP,CADH;;UAAA;YAAA;YACpBC,YADoB,kBACpBA,YADoB;YAGtBC,KAHsB,GAGdC,oBAAA,CAAOC,WAAP,CAAmB,YAAnB,CAHc;YAI5BP,MAAM,CAACK,KAAD,CAAN,CAAcO,WAAd;;UAJ4B;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAA5B,CAAF;EAMAb,IAAI,CAAC,QAAD,EAAW,YAAM;IACnBC,MAAM,CAACT,eAAe,CAACI,OAAD,EAAU,QAAV,CAAhB,CAAN,CAA2CkB,WAA3C;EACD,CAFG,CAAJ;EAGAd,IAAI,CAAC,UAAD,EAAa,YAAM;IACrBC,MAAM,CAACT,eAAe,CAACI,OAAD,EAAU,UAAV,CAAhB,CAAN,CAA6CkB,WAA7C;EACD,CAFG,CAAJ;AAGD,CA1BO,CAAR"}