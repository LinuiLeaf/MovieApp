77b58f60b53853ebb70a6a91c91d8d0d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

var _MovieDetails = _interopRequireDefault(require("../app/screens/MovieDetails/MovieDetails"));

var _constants = _interopRequireDefault(require("../app/config/constants"));

var _enzyme = require("enzyme");

var _reactRedux = require("react-redux");

var _configureStore = _interopRequireDefault(require("../app/store/configureStore"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _reactNative2 = require("@testing-library/react-native");

var _jestNative = require("@testing-library/jest-native");

require("@testing-library/jest-native/extend-expect");

var findTextElement = function findTextElement(tree, element) {
  console.warn(tree.children);
  return true;
};

describe("Movie Details Screen ", function () {
  var wrapper = _reactTestRenderer.default.create(_react.default.createElement(_MovieDetails.default, null)).toJSON();

  test("Snapshot ", function () {
    expect(wrapper).toMatchSnapshot();
  });
  it("uses correct src", function _callee() {
    var _await$render, getByAltText, image;

    return _regenerator.default.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _regenerator.default.awrap((0, _reactNative2.render)(_react.default.createElement(_MovieDetails.default, null)));

          case 2:
            _await$render = _context.sent;
            getByAltText = _await$render.getByAltText;
            image = getByAltText("the_alt_text");
            expect(image).toHaveAttribute("src", "the_url");

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, null, Promise);
  });
  test("Images", function () {
    expect(findTextElement(wrapper, "Images")).toBeDefined();
  });
  test("Flatlist", function () {
    expect(findTextElement(wrapper, "FlatList")).toBeDefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmaW5kVGV4dEVsZW1lbnQiLCJ0cmVlIiwiZWxlbWVudCIsImNvbnNvbGUiLCJ3YXJuIiwiY2hpbGRyZW4iLCJkZXNjcmliZSIsIndyYXBwZXIiLCJyZW5kZXJlciIsImNyZWF0ZSIsInRvSlNPTiIsInRlc3QiLCJleHBlY3QiLCJ0b01hdGNoU25hcHNob3QiLCJpdCIsInJlbmRlciIsImdldEJ5QWx0VGV4dCIsImltYWdlIiwidG9IYXZlQXR0cmlidXRlIiwidG9CZURlZmluZWQiXSwic291cmNlcyI6WyJNb3ZpZURldGFpbHMtdGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgXCJyZWFjdC1uYXRpdmVcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBNb3ZpZURldGFpbHMgZnJvbSBcIi4uL2FwcC9zY3JlZW5zL01vdmllRGV0YWlscy9Nb3ZpZURldGFpbHNcIjtcbmltcG9ydCBjb25zdGFudHMgZnJvbSBcIi4uL2FwcC9jb25maWcvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gXCJyZWFjdC1uYXRpdmVcIjtcbmltcG9ydCB7IHNoYWxsb3csIGNvbmZpZ3VyZSwgbW91bnQgfSBmcm9tIFwiZW56eW1lXCI7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJyZWFjdC1yZWR1eFwiO1xuaW1wb3J0IHN0b3JlIGZyb20gXCIuLi9hcHAvc3RvcmUvY29uZmlndXJlU3RvcmVcIjtcbi8vIE5vdGU6IHRlc3QgcmVuZGVyZXIgbXVzdCBiZSByZXF1aXJlZCBhZnRlciByZWFjdC1uYXRpdmUuXG5pbXBvcnQgcmVuZGVyZXIgZnJvbSBcInJlYWN0LXRlc3QtcmVuZGVyZXJcIjtcbmltcG9ydCB7IHJlbmRlciwgY29udGFpbmVyIH0gZnJvbSBcIkB0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlXCI7XG5pbXBvcnQgeyB0b0hhdmVTdHlsZSB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtbmF0aXZlXCI7XG5pbXBvcnQgXCJAdGVzdGluZy1saWJyYXJ5L2plc3QtbmF0aXZlL2V4dGVuZC1leHBlY3RcIjtcblxubGV0IGZpbmRUZXh0RWxlbWVudCA9IGZ1bmN0aW9uICh0cmVlLCBlbGVtZW50KSB7XG4gIGNvbnNvbGUud2Fybih0cmVlLmNoaWxkcmVuKTtcbiAgcmV0dXJuIHRydWU7XG59O1xuXG5kZXNjcmliZShcIk1vdmllIERldGFpbHMgU2NyZWVuIFwiLCAoKSA9PiB7XG4gIGNvbnN0IHdyYXBwZXIgPSByZW5kZXJlci5jcmVhdGUoPE1vdmllRGV0YWlscyAvPikudG9KU09OKCk7XG5cbiAgdGVzdChcIlNuYXBzaG90IFwiLCAoKSA9PiB7XG4gICAgZXhwZWN0KHdyYXBwZXIpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuICB9KTtcbiAgaXQoXCJ1c2VzIGNvcnJlY3Qgc3JjXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5QWx0VGV4dCB9ID0gYXdhaXQgcmVuZGVyKDxNb3ZpZURldGFpbHMgLz4pO1xuXG4gICAgY29uc3QgaW1hZ2UgPSBnZXRCeUFsdFRleHQoXCJ0aGVfYWx0X3RleHRcIik7XG5cbiAgICAvLyBleHBlY3QoaW1hZ2Uuc3JjKS50b0NvbnRhaW4oXCJ0aGVfdXJsXCIpO1xuICAgIC8vIG9yXG4gICAgZXhwZWN0KGltYWdlKS50b0hhdmVBdHRyaWJ1dGUoXCJzcmNcIiwgXCJ0aGVfdXJsXCIpO1xuICB9KTtcbiAgdGVzdChcIkltYWdlc1wiLCAoKSA9PiB7XG4gICAgZXhwZWN0KGZpbmRUZXh0RWxlbWVudCh3cmFwcGVyLCBcIkltYWdlc1wiKSkudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIHRlc3QoXCJGbGF0bGlzdFwiLCAoKSA9PiB7XG4gICAgZXhwZWN0KGZpbmRUZXh0RWxlbWVudCh3cmFwcGVyLCBcIkZsYXRMaXN0XCIpKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBSUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBSUEsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFVQyxJQUFWLEVBQWdCQyxPQUFoQixFQUF5QjtFQUM3Q0MsT0FBTyxDQUFDQyxJQUFSLENBQWFILElBQUksQ0FBQ0ksUUFBbEI7RUFDQSxPQUFPLElBQVA7QUFDRCxDQUhEOztBQUtBQyxRQUFRLENBQUMsdUJBQUQsRUFBMEIsWUFBTTtFQUN0QyxJQUFNQyxPQUFPLEdBQUdDLDBCQUFBLENBQVNDLE1BQVQsQ0FBZ0IsNkJBQUMscUJBQUQsT0FBaEIsRUFBa0NDLE1BQWxDLEVBQWhCOztFQUVBQyxJQUFJLENBQUMsV0FBRCxFQUFjLFlBQU07SUFDdEJDLE1BQU0sQ0FBQ0wsT0FBRCxDQUFOLENBQWdCTSxlQUFoQjtFQUNELENBRkcsQ0FBSjtFQUdBQyxFQUFFLENBQUMsa0JBQUQsRUFBcUI7SUFBQTs7SUFBQTtNQUFBO1FBQUE7VUFBQTtZQUFBO1lBQUEsa0NBQ1UsSUFBQUMsb0JBQUEsRUFBTyw2QkFBQyxxQkFBRCxPQUFQLENBRFY7O1VBQUE7WUFBQTtZQUNiQyxZQURhLGlCQUNiQSxZQURhO1lBR2ZDLEtBSGUsR0FHUEQsWUFBWSxDQUFDLGNBQUQsQ0FITDtZQU9yQkosTUFBTSxDQUFDSyxLQUFELENBQU4sQ0FBY0MsZUFBZCxDQUE4QixLQUE5QixFQUFxQyxTQUFyQzs7VUFQcUI7VUFBQTtZQUFBO1FBQUE7TUFBQTtJQUFBO0VBQUEsQ0FBckIsQ0FBRjtFQVNBUCxJQUFJLENBQUMsUUFBRCxFQUFXLFlBQU07SUFDbkJDLE1BQU0sQ0FBQ1osZUFBZSxDQUFDTyxPQUFELEVBQVUsUUFBVixDQUFoQixDQUFOLENBQTJDWSxXQUEzQztFQUNELENBRkcsQ0FBSjtFQUdBUixJQUFJLENBQUMsVUFBRCxFQUFhLFlBQU07SUFDckJDLE1BQU0sQ0FBQ1osZUFBZSxDQUFDTyxPQUFELEVBQVUsVUFBVixDQUFoQixDQUFOLENBQTZDWSxXQUE3QztFQUNELENBRkcsQ0FBSjtBQUdELENBckJPLENBQVIifQ==