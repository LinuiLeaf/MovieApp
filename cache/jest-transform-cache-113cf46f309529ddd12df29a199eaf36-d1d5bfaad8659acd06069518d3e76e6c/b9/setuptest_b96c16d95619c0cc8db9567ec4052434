4e1d6996790f998c35bd52e36dd21362
_getJestObj().mock("@react-native-async-storage/async-storage", function () {
  return _asyncStorageMock.default;
});

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

require("react-native");

var _enzyme = _interopRequireWildcard(require("enzyme"));

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

var _asyncStorageMock = _interopRequireDefault(require("@react-native-async-storage/async-storage/jest/async-storage-mock"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

_enzyme.default.configure({
  adapter: new _enzymeAdapterReact.default()
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2NrIiwibW9ja0FzeW5jU3RvcmFnZSIsIkVuenltZSIsImNvbmZpZ3VyZSIsImFkYXB0ZXIiLCJBZGFwdGVyIl0sInNvdXJjZXMiOlsic2V0dXAtdGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzZXR1cC10ZXN0cy5qc1xuXG5pbXBvcnQgXCJyZWFjdC1uYXRpdmVcIjtcbmltcG9ydCBcImVuenltZVwiO1xuaW1wb3J0IEFkYXB0ZXIgZnJvbSBcImVuenltZS1hZGFwdGVyLXJlYWN0LTE2XCI7XG5pbXBvcnQgRW56eW1lIGZyb20gXCJlbnp5bWVcIjtcbmltcG9ydCB7IGNvbmZpZ3VyZSB9IGZyb20gXCJlbnp5bWVcIjtcbmltcG9ydCBtb2NrQXN5bmNTdG9yYWdlIGZyb20gXCJAcmVhY3QtbmF0aXZlLWFzeW5jLXN0b3JhZ2UvYXN5bmMtc3RvcmFnZS9qZXN0L2FzeW5jLXN0b3JhZ2UtbW9ja1wiO1xuXG4vKipcbiAqIFNldCB1cCBET00gaW4gbm9kZS5qcyBlbnZpcm9ubWVudCBmb3IgRW56eW1lIHRvIG1vdW50IHRvXG4gKi9cbi8qKlxuICogU2V0IHVwIEVuenltZSB0byBtb3VudCB0byBET00sIHNpbXVsYXRlIGV2ZW50cyxcbiAqIGFuZCBpbnNwZWN0IHRoZSBET00gaW4gdGVzdHMuXG4gKi9cbkVuenltZS5jb25maWd1cmUoeyBhZGFwdGVyOiBuZXcgQWRhcHRlcigpIH0pO1xuXG5qZXN0Lm1vY2soXCJAcmVhY3QtbmF0aXZlLWFzeW5jLXN0b3JhZ2UvYXN5bmMtc3RvcmFnZVwiLCAoKSA9PiBtb2NrQXN5bmNTdG9yYWdlKTtcbiJdLCJtYXBwaW5ncyI6IkFBa0JBLGNBQUtBLElBQUwsQ0FBVSwyQ0FBVixFQUF1RDtFQUFBLE9BQU1DLHlCQUFOO0FBQUEsQ0FBdkQ7Ozs7QUFoQkE7O0FBQ0E7O0FBQ0E7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU0FDLGVBQUEsQ0FBT0MsU0FBUCxDQUFpQjtFQUFFQyxPQUFPLEVBQUUsSUFBSUMsMkJBQUo7QUFBWCxDQUFqQiJ9