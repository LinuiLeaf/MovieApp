11f35f7fc3bcd81f7efde597fd6f60bb
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

var _MovieDetails = _interopRequireDefault(require("../app/screens/MovieDetails/MovieDetails"));

var _constants = _interopRequireDefault(require("../app/config/constants"));

var _enzyme = require("enzyme");

var _reactRedux = require("react-redux");

var _configureStore = _interopRequireDefault(require("../app/store/configureStore"));

var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));

var _reactNative2 = require("@testing-library/react-native");

var _jestNative = require("@testing-library/jest-native");

require("@testing-library/jest-native/extend-expect");

var findTextElement = function findTextElement(tree, element) {
  return true;
};

describe("Movie Details Screen ", function () {
  var wrapper = _reactTestRenderer.default.create(_react.default.createElement(_MovieDetails.default, null)).toJSON();

  test("Snapshot ", function () {
    expect(wrapper).toMatchSnapshot();
  });
  it("Image must contain an src", function _callee() {
    var _await$render, getByAltText, image;

    return _regenerator.default.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return _regenerator.default.awrap((0, _reactNative2.render)(_react.default.createElement(_MovieDetails.default, null)));

          case 2:
            _await$render = _context.sent;
            getByAltText = _await$render.getByAltText;
            image = _reactNative2.screen.getByTestId("poster");
            expect(image.props.source.uri).toContain("https://image.tmdb.org/t/p/w300undefined");

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("Image must have a style", function _callee2() {
    var _await$render2, getByAltText, image;

    return _regenerator.default.async(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return _regenerator.default.awrap((0, _reactNative2.render)(_react.default.createElement(_MovieDetails.default, null)));

          case 2:
            _await$render2 = _context2.sent;
            getByAltText = _await$render2.getByAltText;
            image = _reactNative2.screen.getByTestId("sub_poster");
            expect(image).toHaveStyle();

          case 6:
          case "end":
            return _context2.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("It must have a about movie section", function _callee3() {
    var _render, getByText;

    return _regenerator.default.async(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _render = (0, _reactNative2.render)(_react.default.createElement(_MovieDetails.default, null)), getByText = _render.getByText;
            getByText("About Movie", {
              exact: false
            });

          case 2:
          case "end":
            return _context3.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("It must have a about Overviews section", function _callee4() {
    var _render2, getByText;

    return _regenerator.default.async(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            _render2 = (0, _reactNative2.render)(_react.default.createElement(_MovieDetails.default, null)), getByText = _render2.getByText;
            getByText("Overviews:");

          case 2:
          case "end":
            return _context4.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("It must have a Release Date", function _callee5() {
    var _render3, getByText;

    return _regenerator.default.async(function _callee5$(_context5) {
      while (1) {
        switch (_context5.prev = _context5.next) {
          case 0:
            _render3 = (0, _reactNative2.render)(_react.default.createElement(_MovieDetails.default, null)), getByText = _render3.getByText;
            getByText("Release Date:", {
              exact: false
            });

          case 2:
          case "end":
            return _context5.stop();
        }
      }
    }, null, null, null, Promise);
  });
  it("It must have a about movie rating section", function _callee6() {
    var _render4, getByText;

    return _regenerator.default.async(function _callee6$(_context6) {
      while (1) {
        switch (_context6.prev = _context6.next) {
          case 0:
            _render4 = (0, _reactNative2.render)(_react.default.createElement(_MovieDetails.default, null)), getByText = _render4.getByText;
            getByText("Average Rating:", {
              exact: false
            });

          case 2:
          case "end":
            return _context6.stop();
        }
      }
    }, null, null, null, Promise);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmaW5kVGV4dEVsZW1lbnQiLCJ0cmVlIiwiZWxlbWVudCIsImRlc2NyaWJlIiwid3JhcHBlciIsInJlbmRlcmVyIiwiY3JlYXRlIiwidG9KU09OIiwidGVzdCIsImV4cGVjdCIsInRvTWF0Y2hTbmFwc2hvdCIsIml0IiwicmVuZGVyIiwiZ2V0QnlBbHRUZXh0IiwiaW1hZ2UiLCJzY3JlZW4iLCJnZXRCeVRlc3RJZCIsInByb3BzIiwic291cmNlIiwidXJpIiwidG9Db250YWluIiwidG9IYXZlU3R5bGUiLCJnZXRCeVRleHQiLCJleGFjdCJdLCJzb3VyY2VzIjpbIk1vdmllRGV0YWlscy10ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZvcm1hdFxuICovXG5cbmltcG9ydCBcInJlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IE1vdmllRGV0YWlscyBmcm9tIFwiLi4vYXBwL3NjcmVlbnMvTW92aWVEZXRhaWxzL01vdmllRGV0YWlsc1wiO1xuaW1wb3J0IGNvbnN0YW50cyBmcm9tIFwiLi4vYXBwL2NvbmZpZy9jb25zdGFudHNcIjtcbmltcG9ydCB7IEltYWdlIH0gZnJvbSBcInJlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IHsgc2hhbGxvdywgY29uZmlndXJlLCBtb3VudCB9IGZyb20gXCJlbnp5bWVcIjtcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcInJlYWN0LXJlZHV4XCI7XG5pbXBvcnQgc3RvcmUgZnJvbSBcIi4uL2FwcC9zdG9yZS9jb25maWd1cmVTdG9yZVwiO1xuLy8gTm90ZTogdGVzdCByZW5kZXJlciBtdXN0IGJlIHJlcXVpcmVkIGFmdGVyIHJlYWN0LW5hdGl2ZS5cbmltcG9ydCByZW5kZXJlciBmcm9tIFwicmVhY3QtdGVzdC1yZW5kZXJlclwiO1xuaW1wb3J0IHsgcmVuZGVyLCBjb250YWluZXIsIHNjcmVlbiB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZVwiO1xuaW1wb3J0IHsgdG9IYXZlU3R5bGUgfSBmcm9tIFwiQHRlc3RpbmctbGlicmFyeS9qZXN0LW5hdGl2ZVwiO1xuaW1wb3J0IFwiQHRlc3RpbmctbGlicmFyeS9qZXN0LW5hdGl2ZS9leHRlbmQtZXhwZWN0XCI7XG5cbmxldCBmaW5kVGV4dEVsZW1lbnQgPSBmdW5jdGlvbiAodHJlZSwgZWxlbWVudCkge1xuICAvLyBjb25zb2xlLndhcm4odHJlZS5jaGlsZHJlbik7XG4gIHJldHVybiB0cnVlO1xufTtcblxuZGVzY3JpYmUoXCJNb3ZpZSBEZXRhaWxzIFNjcmVlbiBcIiwgKCkgPT4ge1xuICBjb25zdCB3cmFwcGVyID0gcmVuZGVyZXIuY3JlYXRlKDxNb3ZpZURldGFpbHMgLz4pLnRvSlNPTigpO1xuXG4gIHRlc3QoXCJTbmFwc2hvdCBcIiwgKCkgPT4ge1xuICAgIGV4cGVjdCh3cmFwcGVyKS50b01hdGNoU25hcHNob3QoKTtcbiAgfSk7XG4gIGl0KFwiSW1hZ2UgbXVzdCBjb250YWluIGFuIHNyY1wiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeUFsdFRleHQgfSA9IGF3YWl0IHJlbmRlcig8TW92aWVEZXRhaWxzIC8+KTtcblxuICAgIGNvbnN0IGltYWdlID0gc2NyZWVuLmdldEJ5VGVzdElkKFwicG9zdGVyXCIpO1xuICAgIGV4cGVjdChpbWFnZS5wcm9wcy5zb3VyY2UudXJpKS50b0NvbnRhaW4oXG4gICAgICBcImh0dHBzOi8vaW1hZ2UudG1kYi5vcmcvdC9wL3czMDB1bmRlZmluZWRcIlxuICAgICk7XG4gIH0pO1xuICBpdChcIkltYWdlIG11c3QgaGF2ZSBhIHN0eWxlXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5QWx0VGV4dCB9ID0gYXdhaXQgcmVuZGVyKDxNb3ZpZURldGFpbHMgLz4pO1xuXG4gICAgY29uc3QgaW1hZ2UgPSBzY3JlZW4uZ2V0QnlUZXN0SWQoXCJzdWJfcG9zdGVyXCIpO1xuICAgIGV4cGVjdChpbWFnZSkudG9IYXZlU3R5bGUoKTtcbiAgfSk7XG4gIGl0KFwiSXQgbXVzdCBoYXZlIGEgYWJvdXQgbW92aWUgc2VjdGlvblwiLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRleHQgfSA9IHJlbmRlcig8TW92aWVEZXRhaWxzIC8+KTtcbiAgICBnZXRCeVRleHQoXCJBYm91dCBNb3ZpZVwiLCB7IGV4YWN0OiBmYWxzZSB9KTtcbiAgfSk7XG4gIGl0KFwiSXQgbXVzdCBoYXZlIGEgYWJvdXQgT3ZlcnZpZXdzIHNlY3Rpb25cIiwgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSByZW5kZXIoPE1vdmllRGV0YWlscyAvPik7XG4gICAgZ2V0QnlUZXh0KFwiT3ZlcnZpZXdzOlwiKTtcbiAgfSk7XG4gIGl0KFwiSXQgbXVzdCBoYXZlIGEgUmVsZWFzZSBEYXRlXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKDxNb3ZpZURldGFpbHMgLz4pO1xuICAgIGdldEJ5VGV4dChcIlJlbGVhc2UgRGF0ZTpcIiwgeyBleGFjdDogZmFsc2UgfSk7XG4gIH0pO1xuICBpdChcIkl0IG11c3QgaGF2ZSBhIGFib3V0IG1vdmllIHJhdGluZyBzZWN0aW9uXCIsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKDxNb3ZpZURldGFpbHMgLz4pO1xuICAgIGdldEJ5VGV4dChcIkF2ZXJhZ2UgUmF0aW5nOlwiLCB7IGV4YWN0OiBmYWxzZSB9KTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUlBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUVBLElBQUlBLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBVUMsSUFBVixFQUFnQkMsT0FBaEIsRUFBeUI7RUFFN0MsT0FBTyxJQUFQO0FBQ0QsQ0FIRDs7QUFLQUMsUUFBUSxDQUFDLHVCQUFELEVBQTBCLFlBQU07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