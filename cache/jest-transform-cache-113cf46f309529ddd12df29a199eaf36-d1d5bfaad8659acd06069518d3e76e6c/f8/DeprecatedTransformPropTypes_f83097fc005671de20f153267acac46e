ef4f110cbb4be1a00b8f3ae7ef0e7487
'use strict';

var ReactPropTypes = require('prop-types');

var deprecatedPropType = require('../Utilities/deprecatedPropType');

var TransformMatrixPropType = function TransformMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The transformMatrix style property is deprecated. ' + 'Use `transform: [{ matrix: ... }]` instead.');
  }
};

var DecomposedMatrixPropType = function DecomposedMatrixPropType(props, propName, componentName) {
  if (props[propName]) {
    return new Error('The decomposedMatrix style property is deprecated. ' + 'Use `transform: [...]` instead.');
  }
};

var DeprecatedTransformPropTypes = {
  transform: ReactPropTypes.arrayOf(ReactPropTypes.oneOfType([ReactPropTypes.shape({
    perspective: ReactPropTypes.number
  }), ReactPropTypes.shape({
    rotate: ReactPropTypes.string
  }), ReactPropTypes.shape({
    rotateX: ReactPropTypes.string
  }), ReactPropTypes.shape({
    rotateY: ReactPropTypes.string
  }), ReactPropTypes.shape({
    rotateZ: ReactPropTypes.string
  }), ReactPropTypes.shape({
    scale: ReactPropTypes.number
  }), ReactPropTypes.shape({
    scaleX: ReactPropTypes.number
  }), ReactPropTypes.shape({
    scaleY: ReactPropTypes.number
  }), ReactPropTypes.shape({
    translateX: ReactPropTypes.number
  }), ReactPropTypes.shape({
    translateY: ReactPropTypes.number
  }), ReactPropTypes.shape({
    skewX: ReactPropTypes.string
  }), ReactPropTypes.shape({
    skewY: ReactPropTypes.string
  })])),
  transformMatrix: TransformMatrixPropType,
  decomposedMatrix: DecomposedMatrixPropType,
  scaleX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  scaleY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  rotation: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateX: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.'),
  translateY: deprecatedPropType(ReactPropTypes.number, 'Use the transform prop instead.')
};
module.exports = DeprecatedTransformPropTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdFByb3BUeXBlcyIsInJlcXVpcmUiLCJkZXByZWNhdGVkUHJvcFR5cGUiLCJUcmFuc2Zvcm1NYXRyaXhQcm9wVHlwZSIsInByb3BzIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwiRXJyb3IiLCJEZWNvbXBvc2VkTWF0cml4UHJvcFR5cGUiLCJEZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzIiwidHJhbnNmb3JtIiwiYXJyYXlPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwicGVyc3BlY3RpdmUiLCJudW1iZXIiLCJyb3RhdGUiLCJzdHJpbmciLCJyb3RhdGVYIiwicm90YXRlWSIsInJvdGF0ZVoiLCJzY2FsZSIsInNjYWxlWCIsInNjYWxlWSIsInRyYW5zbGF0ZVgiLCJ0cmFuc2xhdGVZIiwic2tld1giLCJza2V3WSIsInRyYW5zZm9ybU1hdHJpeCIsImRlY29tcG9zZWRNYXRyaXgiLCJyb3RhdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJEZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3dcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IFJlYWN0UHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG5jb25zdCBkZXByZWNhdGVkUHJvcFR5cGUgPSByZXF1aXJlKCcuLi9VdGlsaXRpZXMvZGVwcmVjYXRlZFByb3BUeXBlJyk7XG5cbmNvbnN0IFRyYW5zZm9ybU1hdHJpeFByb3BUeXBlID0gZnVuY3Rpb24oXG4gIHByb3BzOiBPYmplY3QsXG4gIHByb3BOYW1lOiBzdHJpbmcsXG4gIGNvbXBvbmVudE5hbWU6IHN0cmluZyxcbik6ID9FcnJvciB7XG4gIGlmIChwcm9wc1twcm9wTmFtZV0pIHtcbiAgICByZXR1cm4gbmV3IEVycm9yKFxuICAgICAgJ1RoZSB0cmFuc2Zvcm1NYXRyaXggc3R5bGUgcHJvcGVydHkgaXMgZGVwcmVjYXRlZC4gJyArXG4gICAgICAgICdVc2UgYHRyYW5zZm9ybTogW3sgbWF0cml4OiAuLi4gfV1gIGluc3RlYWQuJyxcbiAgICApO1xuICB9XG59O1xuXG5jb25zdCBEZWNvbXBvc2VkTWF0cml4UHJvcFR5cGUgPSBmdW5jdGlvbihcbiAgcHJvcHM6IE9iamVjdCxcbiAgcHJvcE5hbWU6IHN0cmluZyxcbiAgY29tcG9uZW50TmFtZTogc3RyaW5nLFxuKTogP0Vycm9yIHtcbiAgaWYgKHByb3BzW3Byb3BOYW1lXSkge1xuICAgIHJldHVybiBuZXcgRXJyb3IoXG4gICAgICAnVGhlIGRlY29tcG9zZWRNYXRyaXggc3R5bGUgcHJvcGVydHkgaXMgZGVwcmVjYXRlZC4gJyArXG4gICAgICAgICdVc2UgYHRyYW5zZm9ybTogWy4uLl1gIGluc3RlYWQuJyxcbiAgICApO1xuICB9XG59O1xuXG5jb25zdCBEZXByZWNhdGVkVHJhbnNmb3JtUHJvcFR5cGVzID0ge1xuICB0cmFuc2Zvcm06IChSZWFjdFByb3BUeXBlcy5hcnJheU9mKFxuICAgIFJlYWN0UHJvcFR5cGVzLm9uZU9mVHlwZShbXG4gICAgICBSZWFjdFByb3BUeXBlcy5zaGFwZSh7cGVyc3BlY3RpdmU6IFJlYWN0UHJvcFR5cGVzLm51bWJlcn0pLFxuICAgICAgUmVhY3RQcm9wVHlwZXMuc2hhcGUoe3JvdGF0ZTogUmVhY3RQcm9wVHlwZXMuc3RyaW5nfSksXG4gICAgICBSZWFjdFByb3BUeXBlcy5zaGFwZSh7cm90YXRlWDogUmVhY3RQcm9wVHlwZXMuc3RyaW5nfSksXG4gICAgICBSZWFjdFByb3BUeXBlcy5zaGFwZSh7cm90YXRlWTogUmVhY3RQcm9wVHlwZXMuc3RyaW5nfSksXG4gICAgICBSZWFjdFByb3BUeXBlcy5zaGFwZSh7cm90YXRlWjogUmVhY3RQcm9wVHlwZXMuc3RyaW5nfSksXG4gICAgICBSZWFjdFByb3BUeXBlcy5zaGFwZSh7c2NhbGU6IFJlYWN0UHJvcFR5cGVzLm51bWJlcn0pLFxuICAgICAgUmVhY3RQcm9wVHlwZXMuc2hhcGUoe3NjYWxlWDogUmVhY3RQcm9wVHlwZXMubnVtYmVyfSksXG4gICAgICBSZWFjdFByb3BUeXBlcy5zaGFwZSh7c2NhbGVZOiBSZWFjdFByb3BUeXBlcy5udW1iZXJ9KSxcbiAgICAgIFJlYWN0UHJvcFR5cGVzLnNoYXBlKHt0cmFuc2xhdGVYOiBSZWFjdFByb3BUeXBlcy5udW1iZXJ9KSxcbiAgICAgIFJlYWN0UHJvcFR5cGVzLnNoYXBlKHt0cmFuc2xhdGVZOiBSZWFjdFByb3BUeXBlcy5udW1iZXJ9KSxcbiAgICAgIFJlYWN0UHJvcFR5cGVzLnNoYXBlKHtza2V3WDogUmVhY3RQcm9wVHlwZXMuc3RyaW5nfSksXG4gICAgICBSZWFjdFByb3BUeXBlcy5zaGFwZSh7c2tld1k6IFJlYWN0UHJvcFR5cGVzLnN0cmluZ30pLFxuICAgIF0pLFxuICApOiBSZWFjdCRQcm9wVHlwZSRQcmltaXRpdmU8XG4gICAgQXJyYXk8XG4gICAgICB8IHtwZXJzcGVjdGl2ZT86IG51bWJlciwgLi4ufVxuICAgICAgfCB7cm90YXRlPzogc3RyaW5nLCAuLi59XG4gICAgICB8IHtyb3RhdGVYPzogc3RyaW5nLCAuLi59XG4gICAgICB8IHtyb3RhdGVZPzogc3RyaW5nLCAuLi59XG4gICAgICB8IHtyb3RhdGVaPzogc3RyaW5nLCAuLi59XG4gICAgICB8IHtzY2FsZT86IG51bWJlciwgLi4ufVxuICAgICAgfCB7c2NhbGVYPzogbnVtYmVyLCAuLi59XG4gICAgICB8IHtzY2FsZVk/OiBudW1iZXIsIC4uLn1cbiAgICAgIHwge3RyYW5zbGF0ZVg/OiBudW1iZXIsIC4uLn1cbiAgICAgIHwge3RyYW5zbGF0ZVk/OiBudW1iZXIsIC4uLn1cbiAgICAgIHwge3NrZXdYPzogc3RyaW5nLCAuLi59XG4gICAgICB8IHtza2V3WT86IHN0cmluZywgLi4ufSxcbiAgICA+LFxuICA+KSxcbiAgdHJhbnNmb3JtTWF0cml4OiBUcmFuc2Zvcm1NYXRyaXhQcm9wVHlwZSxcbiAgZGVjb21wb3NlZE1hdHJpeDogRGVjb21wb3NlZE1hdHJpeFByb3BUeXBlLFxuICBzY2FsZVg6IChkZXByZWNhdGVkUHJvcFR5cGUoXG4gICAgUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICAgICdVc2UgdGhlIHRyYW5zZm9ybSBwcm9wIGluc3RlYWQuJyxcbiAgKTogUmVhY3RQcm9wc0NoZWNrVHlwZSksXG4gIHNjYWxlWTogKGRlcHJlY2F0ZWRQcm9wVHlwZShcbiAgICBSZWFjdFByb3BUeXBlcy5udW1iZXIsXG4gICAgJ1VzZSB0aGUgdHJhbnNmb3JtIHByb3AgaW5zdGVhZC4nLFxuICApOiBSZWFjdFByb3BzQ2hlY2tUeXBlKSxcbiAgcm90YXRpb246IChkZXByZWNhdGVkUHJvcFR5cGUoXG4gICAgUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICAgICdVc2UgdGhlIHRyYW5zZm9ybSBwcm9wIGluc3RlYWQuJyxcbiAgKTogUmVhY3RQcm9wc0NoZWNrVHlwZSksXG4gIHRyYW5zbGF0ZVg6IChkZXByZWNhdGVkUHJvcFR5cGUoXG4gICAgUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICAgICdVc2UgdGhlIHRyYW5zZm9ybSBwcm9wIGluc3RlYWQuJyxcbiAgKTogUmVhY3RQcm9wc0NoZWNrVHlwZSksXG4gIHRyYW5zbGF0ZVk6IChkZXByZWNhdGVkUHJvcFR5cGUoXG4gICAgUmVhY3RQcm9wVHlwZXMubnVtYmVyLFxuICAgICdVc2UgdGhlIHRyYW5zZm9ybSBwcm9wIGluc3RlYWQuJyxcbiAgKTogUmVhY3RQcm9wc0NoZWNrVHlwZSksXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IERlcHJlY2F0ZWRUcmFuc2Zvcm1Qcm9w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